/************************************************************************************************/
/** 
 * @file		KsMainThread.cpp
 * @brief		メインスレッド
 * @author		Tsukasa Kato
 * @date		2011/07/02
 * @since		2011/07/02
 * @version		1.0.0
 */
/************************************************************************************************/
#ifndef __KSMAINTHREAD_H__
#define __KSMAINTHREAD_H__

/*==============================================================================================*/
/*                                 << インクルード >>                                            */
/*==============================================================================================*/

/*==============================================================================================*/
/*                                     << 宣言 >>                                               */
/*==============================================================================================*/
class KsGameSystem;

/*==============================================================================================*/
/*                                     << 定義 >>                                               */
/*==============================================================================================*/


/************************************************************************************************/
/**
 * メインスレッド
 * @class	KsThread
 * @author  Tsukasa Kato
 * @since   2003/03/22
 * @version ----/--/--
 */
/************************************************************************************************/
class KsMainThread : public KsThread
{
	public:
		/**
		 * コンストラクタ
		 * @param	hInstance			インスタンス
		 * @param	hPrevInstance		インスタンス
		 * @param	lpCmdLine			コマンドライン
		 * @param	nCmdShow			コマンド表示
		 */
										KsMainThread( HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, KsInt32 nCmdShow );

		/**
		 * デストラクタ
		 */
										~KsMainThread();

		/**
		 * スレッドのメイン関数
		 * @return	実行終了結果
		 */
		virtual KsUInt32				threadMain();


		/**
		 * メインスレッドの処理を開始する。
		 */
		KsBool							run();

		/**
		 * 同期まちをする
		 */
		void							syncWait();

	private:
		KsGameSystem*					m_pGameSystem;			/**< ゲームシステム		*/
		KsHandle						m_syncEvent;			/**< 同期イベント			*/
		KsHandle						m_exitEvent;			/**< 終了イベント			*/
};

#endif	/* __KSMAINTHREAD_H__ */


