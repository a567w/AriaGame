/************************************************************************************************/
/** 
 * @file		KsMainThread.cpp
 * @brief		メインスレッド
 * @author		Tsukasa Kato
 * @date		2011/07/02
 * @since		2011/07/02
 * @version		1.0.0
 */
/************************************************************************************************/

/*==============================================================================================*/
/*                                 << ワーニング抑制 >>                                          */
/*==============================================================================================*/

/*==============================================================================================*/
/*                                 << ライブラリリンク >>                                        */
/*==============================================================================================*/

/*==============================================================================================*/
/*                                 << インクルード >>                                           */
/*==============================================================================================*/
#include "Aria/KsGamePreCompile.h"
#include "Aria/thread/KsMainThread.h"

/*==============================================================================================*/
/*                                     << 宣言 >>                                               */
/*==============================================================================================*/

/*==============================================================================================*/
/*                                     << 定義 >>                                               */
/*==============================================================================================*/


/************************************************************************************************/
/*
 * ゲームシステム生成
 * @param	hInstance			インスタンス
 * @param	hPrevInstance		インスタンス
 * @param	lpCmdLine			コマンドライン
 * @param	nCmdShow			コマンド表示
 * @note	すでにウインドウがある場合は、それをもとのサイズで復旧させる
 */
/************************************************************************************************/
KsMainThread::KsMainThread( HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, KsInt32 nCmdShow )
{
	m_syncEvent = KsCreateEvent( ksTRUE, ksFALSE, "MainSyncEvent" );
	m_exitEvent = KsCreateEvent( ksTRUE, ksFALSE, "MainExitEvent" );


	/* 二重起動チェックで生成 */
	m_pGameSystem = KsGameCreate( hInstance, hPrevInstance, lpCmdLine, nCmdShow );

}

/************************************************************************************************/
/*
 * デストラクタ
 */
/************************************************************************************************/
KsMainThread::~KsMainThread()
{
	KsGameDestroy( m_pGameSystem );
}

/************************************************************************************************/
/*
 * メインスレッドの処理を開始する。
 */
/************************************************************************************************/
KsBool KsMainThread::run()
{
	start();

	/* 初期化 */
	m_pGameSystem->initialize();

	/* ゲームループ */
	//m_pGameSystem->messageLoop();
	m_pGameSystem->loop();

	/* 後処理 */
	m_pGameSystem->terminate();

	return ksTRUE;
}


/************************************************************************************************/
/*
 * メインスレッドの同期待ちをする
 */
/************************************************************************************************/
void KsMainThread::syncWait()
{
	KsWaitEvent( m_syncEvent );
}

/************************************************************************************************/
/*
 * スレッドのメイン処理
 */
/************************************************************************************************/
KsUInt32 KsMainThread::threadMain()
{
	const KsUInt32 numProcessor = KsWindowUtility::getNumProcessor();

//	setProcessor( 1<<2 );
	KsBool	bLoop = ksTRUE;

	/* ゲームループ */
	while( bLoop )
	{
		yield();
	}

	return 0;
}


