/************************************************************************************************/
/** 
 * @file		KsScene.h
 * @brief		シーン
 * @author		Tsukasa Kato
 * @date		2011/07/02
 * @since		2011/07/02
 * @version		1.0.0
 */
/************************************************************************************************/
#ifndef __KSSCENE_H__
#define __KSSCENE_H__

/*==============================================================================================*/
/*                                 << インクルード >>                                             */
/*==============================================================================================*/

/*==============================================================================================*/
/*                                     << 宣言 >>                                               */
/*==============================================================================================*/

/*==============================================================================================*/
/*                                     << 定義 >>                                               */
/*==============================================================================================*/


/************************************************************************************************/
/**
 * シーン
 * @class	KsScene
 * @author  Tsukasa Kato
 * @since   2003/03/22
 * @version ----/--/--
 */
/************************************************************************************************/
class KsScene : public KsTask
{
	public:
		/**
		 * コンストラクタ
		 * @param	updateOrder				更新オーダー
		 * @param	drawOrder				描画オーダー
		 */
											KsScene( ksSCENE_TYPE sceneType, KsUInt32 updateOrder, KsUInt32 drawOrder );

		/**
		 * デストラクタ
		 */
		virtual								~KsScene();

		/**
		 * 次のシーンを取得する
		 * @return							次のシーン
		 */
		virtual ksSCENE_TYPE				getNextScene() { return ksSCENE_NONE; }

	protected:
		/**
		 * 更新処理
		 * @param		pParam				パラメータ
		 */
		virtual void*						update( void* pParam );

		/**
		 * 描画処理
		 * @param		pParam				パラメータ
		 */
		virtual void*						draw( void* pParam );

	private:
		ksSCENE_TYPE						m_sceneType;		/**< シーンタイプ		*/
};

#endif	/* __KSSCENE_H__ */


