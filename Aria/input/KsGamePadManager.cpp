/************************************************************************************************/
/** 
 * @file		KsGamePadManager.cpp
 * @brief		ゲーム入力処理
 * @author		Tsukasa Kato
 * @date		2006/10/17
 * @since		2006/10/17
 * @version		1.0.0
 */
/************************************************************************************************/

/*==============================================================================================*/
/*                                 << インクルード >>                                           */
/*==============================================================================================*/
#include "Aria/KsGamePreCompile.h"
#include "Aria/input/KsGamePadManager.h"

/*==============================================================================================*/
/*                                     << 宣言 >>                                               */
/*==============================================================================================*/

/*==============================================================================================*/
/*                                     << 定義 >>                                               */
/*==============================================================================================*/
template<> KsGamePadManager*	KsSingleton<KsGamePadManager>::m_pInstance = 0;

/************************************************************************************************/
/*
 * インスタンス取得
 * @return				インスタンス
 */
/************************************************************************************************/
KsGamePadManager&	KsGamePadManager::getInstance()
{
	/*KsAssert( m_pInstance );*/
	return (*m_pInstance);
}

/************************************************************************************************/
/*
 * インスタンス取得
 * @return				インスタンス
 */
/************************************************************************************************/
KsGamePadManager*	KsGamePadManager::getInstancePtr()
{
	return m_pInstance;
}

/************************************************************************************************/
/*
 * コンストラクタ
 * @param	pInputSystem	入力システム
 */
/************************************************************************************************/
KsGamePadManager::KsGamePadManager( KsInputSystem* pInputSystem )
	: m_pInputSystem( pInputSystem )
{
	for( KsUInt32 idx=0; idx<pInputSystem->getNumPad(); idx++ )
	{
		KsGamePad*	pGamePad = ksNew KsGamePad( pInputSystem, idx );
		
		m_vpGamePad.push_back( pGamePad );
	}

	for( KsUInt32 idx=0; idx<pInputSystem->getNumMouse(); idx++ )
	{
		KsGameMouse* pGameMouse = ksNew KsGameMouse( pInputSystem, idx );
		
		m_vpGameMouse.push_back( pGameMouse );
	}
}

/************************************************************************************************/
/*
 * デストラクタ
 */
/************************************************************************************************/
KsGamePadManager::~KsGamePadManager()
{
	ksDELETEARRAYTEMPLATE( m_vpGamePad );
	ksDELETEARRAYTEMPLATE( m_vpGameMouse );
}

/************************************************************************************************/
/*
 * 更新処理
 */
/************************************************************************************************/
void KsGamePadManager::update()
{
	m_pInputSystem->update();

	//for( KsUInt32 i=0; i<m_vpGameMouse.size(); i++ )
	//{
	//	m_vpGameMouse[ i ]->update();
	//}

	//for( KsUInt32 i=0; i<m_vpGamePad.size(); i++ )
	//{
	//}
}

/************************************************************************************************/
/*
 * 指定ゲームパッドの取得
 * @param	index			インデックス
 * @return					指定ゲームパッドの参照
 */
/************************************************************************************************/
const KsGamePad& KsGamePadManager::getGamePad( KsInt32 index )
{
	return *m_vpGamePad[ index ];
}

/************************************************************************************************/
/*
 * 指定ゲームパッドの取得
 * @param	index			インデックス
 * @return					指定ゲームパッドのポインタ
 */
/************************************************************************************************/
const KsGamePad* KsGamePadManager::getGamePadPtr( KsInt32 index )
{
	return m_vpGamePad[ index ];
}

/************************************************************************************************/
/*
 * 指定ゲームマウスの取得
 * @param	index			インデックス
 * @return					指定ゲームパッドの参照
 */
/************************************************************************************************/
const KsGameMouse& KsGamePadManager::getGameMouse()
{
	return *m_vpGameMouse[ 0 ];
}

/************************************************************************************************/
/*
 * 指定ゲームマウスの取得
 * @param	index			インデックス
 * @return					指定ゲームパッドのポインタ
 */
/************************************************************************************************/
const KsGameMouse* KsGamePadManager::getGameMousePtr()
{
	return m_vpGameMouse[ 0 ];
}

