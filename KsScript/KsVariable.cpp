/************************************************************************************************/
/** 
 * @file		KsVariable.cpp
 * @brief		変数クラス
 * @author		Tsukasa Kato
 * @date		----/--/--
 * @since		----/--/--
 * @version		1.0
 */
/************************************************************************************************/

/*==============================================================================================*/
/*                                 << インクルード >>                                           */
/*==============================================================================================*/
#include "KsScript/KsScriptPreCompile.h"
#include "KsVariable.h"

/*==============================================================================================*/
/*                                     << 定義 >>                                               */
/*==============================================================================================*/

/*==============================================================================================*/
/*                                     << 宣言 >>                                               */
/*==============================================================================================*/

/************************************************************************************************/
/*
 * コンストラクタ
 */
/************************************************************************************************/
KsVariable::KsVariable()
	: m_type( ksVALUE_INVALID )
{
}

/************************************************************************************************/
/*
 * コンストラクタ
 * @param		value_int		整数値
 */
/************************************************************************************************/
KsVariable::KsVariable( KsInt32 value_int )
{
	m_type    = ksVALUE_INT;
	m_value.i = value_int;
}

/************************************************************************************************/
/*
 * コンストラクタ
 * @param		value_float		実数値
 */
/************************************************************************************************/
KsVariable::KsVariable( KsReal value_float )
{
	m_type    = ksVALUE_FLOAT;
	m_value.f = value_float;
}

/************************************************************************************************/
/*
 * タイプを取得する
 */
/************************************************************************************************/
ksVALUE_TYPE KsVariable::getType() const 
{
	return static_cast<ksVALUE_TYPE>( m_type );
}

/************************************************************************************************/
/*
 * 整数値をセットする
 * @param		value_int		整数値
 */
/************************************************************************************************/
void KsVariable::setInt( KsInt32 value_int )
{
	m_type    = ksVALUE_INT;
	m_value.i = value_int;
}

/************************************************************************************************/
/*
 * 実数値をセットする
 * @param		value_float		実数値
 */
/************************************************************************************************/
void KsVariable::setFloat( KsReal value_float )
{
	m_type    = ksVALUE_FLOAT;
	m_value.f = value_float;
}

/************************************************************************************************/
/*
 * ハンドルをセットする
 * @param		value_handle		実数値
 */
/************************************************************************************************/
void KsVariable::setHandle( KsHandle value_handle )
{
	m_type    = ksVALUE_HANDLE;
	m_value.h = value_handle;
}

/************************************************************************************************/
/*
 * 実数値を取得する
 * @return				実数値
 */
/************************************************************************************************/
KsReal KsVariable::getFloat() const 
{
	if( m_type == ksVALUE_INT )
	{
		return static_cast<KsReal>( m_value.i );
	}
	return m_value.f;
}

/************************************************************************************************/
/*
 * 整数値を取得する
 * @return				実数値
 */
/************************************************************************************************/
KsInt32 KsVariable::getInt() const 
{
	if( m_type == ksVALUE_FLOAT )
	{
		return static_cast<KsInt32>( m_value.f );
	}
	return m_value.i;
}

/************************************************************************************************/
/*
 * ハンドルを取得する
 * @return				ハンドル
 */
/************************************************************************************************/
KsHandle KsVariable::getHandle() const 
{
	return m_value.h;
}

/************************************************************************************************/
/*
 * 変数値を取得する
 * @return				変数値
 */
/************************************************************************************************/
KsValue KsVariable::getValue() const 
{
	return m_value;
}

/************************************************************************************************/
/*
 * =演算子オーバーロード（値の代入）
 * @param	value		変数値の参照
 * @return				自分自身の参照
 */
/************************************************************************************************/
KsVariable& KsVariable::operator=( const KsVariable& value )
{
	m_type  = value.m_type;
	m_value = value.m_value;
	return	(*this);
}


