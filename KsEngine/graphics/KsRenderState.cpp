/************************************************************************************************/
/** 
 * @file		KsRenderState.cpp
 * @brief		描画ステート
 * @author		Tsukasa Kato
 * @date		----/--/--
 * @since		----/--/--
 * @version		1.0.0
 */
/************************************************************************************************/

/*==============================================================================================*/
/*                                 << インクルード >>                                           */
/*==============================================================================================*/
#include "KsEngine/KsEnginePreCompile.h"
#include "KsRenderState.h"

/*==============================================================================================*/
/*                                     << 定義 >>                                               */
/*==============================================================================================*/

/*==============================================================================================*/
/*                                     << 宣言 >>                                               */
/*==============================================================================================*/

/************************************************************************************************/
/*
 * レンダーステートをプッシュする
 * @param		pState				プッシュするレンダーステート
 * @retval		ksTRUE				成功
 * @retval		ksFALSE				失敗
 */
/************************************************************************************************/
KsBool KsRenderStateStack::push( const KsRenderState* pState )
{
	if( m_index < ksRENDER_STATE_STACK_MAX )
	{
		memcpy( &m_stack[ m_index ], pState, sizeof( KsRenderState ) );
		++m_index;

		return ksTRUE;
	}

	/* エラーメッセージ */
	KsError( _T("render state stack overflow") );

	return ksFALSE;
}

/************************************************************************************************/
/*
 * レンダーステートをポップする
 * @param		pState				レンダーステートを取得するためのポインタ
 * @retval		ksTRUE				成功
 * @retval		ksFALSE				失敗
 */
/************************************************************************************************/
KsBool KsRenderStateStack::pop( KsRenderState* pState )
{
	if( m_index > 0 )
	{
		--m_index;
		memcpy( pState, &m_stack[ m_index ], sizeof( KsRenderState ) );
		
		return ksTRUE;
	}

	/* エラーメッセージ */
	KsError( _T("render state stack zero limits") );

	return ksFALSE;
}

/************************************************************************************************/
/*
 * スタックをクリアーする
 */
/************************************************************************************************/
void KsRenderStateStack::clear()
{
	m_index = 0;
}

