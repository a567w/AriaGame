/************************************************************************************************/
/** 
 * @file		KsLight.cpp
 * @brief		ライト
 * @author		Tsukasa Kato
 * @date		----/--/--
 * @since		----/--/--
 * @version		1.0
 */
/************************************************************************************************/

/*==============================================================================================*/
/*                                 << インクルード >>                                            */
/*==============================================================================================*/
#include "KsEngine/KsEnginePreCompile.h"
#include "KsLight.h"

/*==============================================================================================*/
/*                                     << 定義 >>                                               */
/*==============================================================================================*/

/*==============================================================================================*/
/*                                     << 宣言 >>                                               */
/*==============================================================================================*/

/************************************************************************************************/
/*
 *
 */
/************************************************************************************************/
KsLight::KsLight()
{
	m_type         = ksLIGHT_TYPE_DIRECTION;
	m_attenuation0 = 0.0f;
	m_attenuation1 = 0.0f;
	m_attenuation2 = 0.0f;
	m_range        = 0.0f;
	m_falloff      = 0.0f;
}

/************************************************************************************************/
/*
 *
 */
/************************************************************************************************/
const KsLight& KsLight::operator = ( const KsLight& light )
{
	m_type         = light.m_type;
	m_diffuse      = light.m_diffuse;
	m_specular     = light.m_specular;
	m_ambient      = light.m_ambient;
	m_position     = light.m_position;
	m_direction    = light.m_direction;
	m_attenuation0 = light.m_attenuation0;
	m_attenuation1 = light.m_attenuation0;
	m_attenuation2 = light.m_attenuation0;
	m_range        = light.m_range;
	m_falloff      = light.m_falloff;

	return( *this );
}

