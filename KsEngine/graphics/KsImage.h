/************************************************************************************************/
/** 
 * @file		KsImage.h
 * @brief		イメージ
 * @author		Tsukasa Kato
 * @date		----/--/--
 * @since		----/--/--
 * @version		1.0
 */
/************************************************************************************************/
#ifndef __KSIMAGE_H__
#define __KSIMAGE_H__

/*==============================================================================================*/
/*                                 << インクルード >>                                            */
/*==============================================================================================*/

/*==============================================================================================*/
/*                                     << 定義 >>                                               */
/*==============================================================================================*/

/*==============================================================================================*/
/*                                     << 宣言 >>                                               */
/*==============================================================================================*/

/************************************************************************************************/
/**
 * イメージフォーマット
 */
/************************************************************************************************/
typedef enum _ksIMAGE_FORMAT
{
	ksIMAGE_UNKNOWN  = 0,			/**< サポート外					*/
	/* 16bit */
	ksIMAGE_X1R5G5B5 = 1,			/**< R5G5B5						*/
	ksIMAGE_A1R5G5B5 = 2,			/**< A1R5G5B5					*/
	ksIMAGE_A4R4G4B4 = 3,			/**< A4R4G4B4					*/
	ksIMAGE_R5G6B5   = 4,			/**< R5G6B5						*/
	/* 32bit */
	ksIMAGE_X8R8G8B8 = 5,			/**< X8R8G8B8					*/
	ksIMAGE_A8R8G8B8 = 6,			/**< A8R8G8B8					*/
	/* インデックスカラー */
	ksIMAGE_INDEX4   = 7,			/**< 16色インデックスカラー		*/
	ksIMAGE_INDEX8   = 8,			/**< 256色インデックスカラー	*/

	ksIMAGE_FORCE32  = 0x7fffffff,	/**< 強制32bit					*/

}ksIMAGE_FORMAT;

/************************************************************************************************/
/**
 * ピクセルフォーマット
 */
/************************************************************************************************/
typedef enum _ksPIXEL_FORMAT
{
	ksPIXEL_UNKNOWN    = 0,				/**< サポート外				*/
	/* 16bit */
	ksPIXEL_X1R5G5B5   = 1,				/**< R5G5B5					*/
	ksPIXEL_A1R5G5B5   = 2,				/**< A1R5G5B5				*/
	ksPIXEL_A4R4G4B4   = 3,				/**< A4R4G4B4				*/
	ksPIXEL_R5G6B5     = 4,				/**< R5G6B5					*/
	
	/* 32bit */
	ksPIXEL_X8R8G8B8   = 5,				/**< X8R8G8B8				*/
	ksPIXEL_A8R8G8B8   = 6,				/**< A8R8G8B8				*/

	ksPIXEL_BACKBUFFER = 128,			/**< バックバッファと同じ	*/
	ksPIXEL_FORCE32    = 0x7fffffff,	/**< 強制32bit				*/

}ksPIXEL_FORMAT;

/************************************************************************************************/
/**
 * イメージのタイプ
 */
/************************************************************************************************/
typedef enum _ksIMAGE_TYPE
{
	ksIMAGE_TYPE_UNKNOWN = 0,				/**< サポート外		*/
	ksIMAGE_BMP          = 1,				/**< BMP			*/
	ksIMAGE_JPG          = 2,				/**< JPG			*/
	ksIMAGE_PNG          = 3,				/**< PNG			*/
	ksIMAGE_TGA          = 4,				/**< TGA			*/
	ksIMAGE_TYPE_FORCE32 = 0x7fffffff,		/**< 強制32bit		*/
}ksIMAGE_TYPE;

/************************************************************************************************/
/**
 * イメージ
 * @class		KsImage
 * @author		Tsukasa Kato
 * @date		----/--/--
 * @since		----/--/--
 */
/************************************************************************************************/
class ksENGINE_API KsImage
{
	public:
		/**
		 * コンストラクタ
		 */
										KsImage();

		/**
		 * コピーコンストラクタ
		 * @param	pImage				イメージのポインタ
		 */
										KsImage( KsImage* pImage );

		/**
		 * デストラクタ
		 */
		virtual						~KsImage();

		/**
		 * イメージをクローンする
		 * @return						クローンしたイメージでたーのポインタ
		 */
		KsImage*						clone();

		/**
		 * イメージを生成する
		 * @param	format				フォーマット
		 * @param	width				幅
		 * @param	height				高さ
		 * @retval	ksTRUE				生成成功
		 * @retval	ksFALSE				生成失敗
		 */
		KsBool							create( ksPIXEL_FORMAT format, KsInt32 width, KsInt32 height );

		/**
		 * イメージを破棄する
		 */
		void							destroy();

	public:
		ksIMAGE_FORMAT					m_imageFormat;		/**< イメージフォーマット			*/
		ksPIXEL_FORMAT					m_pixelFormat;		/**< ピクセルフォーマット			*/
		KsUInt32						m_flags;			/**< 各種フラグ					*/
		KsUInt16						m_width;			/**< 幅							*/
		KsUInt16						m_height;			/**< 高さ						*/
		KsUInt8*						m_pData;			/**< データ						*/
		KsUInt8*						m_pClut;			/**< カラールックアップテーブル	*/
};

#endif		/* __KSIMAGE_H__ */

