/************************************************************************************************/
/** 
 * @file		KsMemoryFixedUnit.h
 * @brief		固定メモリ管理（フリーリスト）
 * @author		Tsukasa Kato
 * @date		----/--/--
 * @since		----/--/--
 * @version		1.0.0
 */
/************************************************************************************************/
#ifndef __KSMEMORYSTATE_H__
#define __KSMEMORYSTATE_H__

/*==============================================================================================*/
/*                                 << インクルード >>                                           */
/*==============================================================================================*/

/*==============================================================================================*/
/*                                     << 定義 >>                                               */
/*==============================================================================================*/

/*==============================================================================================*/
/*                                     << 宣言 >>                                               */
/*==============================================================================================*/


/************************************************************************************************/
/**
 * メモリーステータス
 * @class		KsMemoryUnit
 * @author		Tsukasa Kato
 * @todo
 */
/************************************************************************************************/
class ksENGINE_API KsMemoryState
{
	public:
		KsUInt32				m_totalActualMemory;			/**< トータルの確保した実際のサイズ		*/
		KsUInt32				m_totalRequestMemory;			/**< トータルの確保したリクエストサイズ	*/
		KsUInt32				m_totalAllocUnitCount;			/**< トータルの確保ユニットカウント		*/
		KsUInt32				m_peakActualMemory;				/**< 実際サイズの最大値					*/
		KsUInt32				m_peakRequestMemory;			/**< リクエストサイズの最大値				*/
		KsUInt32				m_peakAllocUnitCount;			/**< 確保ブロックカウントの最大数			*/
		KsUInt32				m_accumulatedActualMemory;		/**< 累積の実際サイズ						*/
		KsUInt32				m_accumulatedRequestMemory;		/**< 累積のリクエストサイズ				*/
		KsUInt32				m_accumulatedAllocUnitCount;	/**< 累積のユニットカウント				*/
};


#endif		/* __KSMEMORYSTATE_H__ */

