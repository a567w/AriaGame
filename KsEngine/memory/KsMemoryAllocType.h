/************************************************************************************************/
/** 
 * @file		KsMemoryAllocType.h
 * @brief		固定メモリ管理（フリーリスト）
 * @author		Tsukasa Kato
 * @date		----/--/--
 * @since		----/--/--
 * @version		1.0.0
 */
/************************************************************************************************/
#ifndef __KSMEMORYALLOCTYPE_H__
#define __KSMEMORYALLOCTYPE_H__

/*==============================================================================================*/
/*                                 << インクルード >>                                           */
/*==============================================================================================*/

/*==============================================================================================*/
/*                                     << 定義 >>                                               */
/*==============================================================================================*/

/*==============================================================================================*/
/*                                     << 宣言 >>                                               */
/*==============================================================================================*/


/************************************************************************************************/
/**
 * @enum		確保したタイプ
 * @author		Tsukasa Kato
 */
/************************************************************************************************/
enum ksALLOC_TYPE_KIND
{
		ksALLOC_TYPE_NEW,				/**< new      で確保			*/
		ksALLOC_TYPE_NEW_ARRAY,			/**< new[]    で確保			*/
		ksALLOC_TYPE_MALLOC,			/**< malloc   で確保			*/
		ksALLOC_TYPE_CALLOC,			/**< calloc   で確保			*/
		ksALLOC_TYPE_REALLOC,			/**< realloc  で確保			*/
		ksALLOC_TYPE_DELETE,			/**< delete   で開放			*/
		ksALLOC_TYPE_DELETE_ARRAY,		/**< delete[] で開放			*/
		ksALLOC_TYPE_FREE,				/**< free     で開放			*/
		ksALLOC_TYPE_UNKNOWN,			/**< セットされていない		*/
};


#endif		/* __KSMEMORYALLOCTYPE_H__ */

