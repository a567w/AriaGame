/************************************************************************************************/
/** 
 * @file		KsIKPositionConstraint.h
 * @brief		人間用IK
 * @author		Tsukasa Kato
 * @date		----/--/--
 * @since		----/--/--
 * @version		1.0.0
 */
/************************************************************************************************/

/*==============================================================================================*/
/*                                 << インクルード >>                                            */
/*==============================================================================================*/
#ifndef __KSIKPOSITIONCONSTRAINT_H__
#define __KSIKPOSITIONCONSTRAINT_H__

/*==============================================================================================*/
/*                                     << 定義 >>                                               */
/*==============================================================================================*/

/*==============================================================================================*/
/*                                     << 宣言 >>                                               */
/*==============================================================================================*/


/************************************************************************************************/
/**
 * @class		KsIKPositionConstraint
 * @brief		ポジションコンストレイント
 * @author		Tsukasa Kato
 * @date		----/--/--
 * @since		----/--/--
 */
/************************************************************************************************/
class ksENGINE_API KsIKPositionConstraint : public KsConstraint
{
	private:
		KsInt32					m_boneIndex;		/**< ボーンインデックス	*/
		KsVector3d				m_start;			/**< 開始座標				*/
		KsVector3d				m_end;				/**< 終了座標				*/
		KsVector3d				m_current;			/**< 補間座標				*/

	public:
		/**
		 * コンストラクタ
		 */
								KsIKPositionConstraint();

		/**
		 * デストラクタ
		 */
		virtual					~KsIKPositionConstraint();

		/**
		 * 更新処理
		 * @param	gameTime	ゲーム更新時間
		 */
		virtual void			update( KsReal gameTime );

		/**
		 * 補間座標を算出する
		 * @param	rate		補間レート
		 */
		void					interpolate( KsReal rate );

		/**
		 * ボーンインデックスを取得する
		 * @return				ボーンインデックス
		 */
		KsInt32					getBoneIndex() const { return m_boneIndex; }

		/**
		 * ボーンインデックスを取得する
		 * @param				ボーンインデックス
		 */
		void					setBoneIndex( KsInt32 boneIndex ) { m_boneIndex = boneIndex; }

};


#endif		/* __KSIKPOSITIONCONSTRAINT_H__ */

