/*************************************************************************************************/
/**
 * @file	KsMath.h
 * @brief	êîäwåvéZ
 * @author	Tsukasa Kato
 * @date	2004/12/13
 * @version	1.0.0
 */
/*************************************************************************************************/
#ifndef __KSMATH_H__
#define __KSMATH_H__

/*===============================================================================================*/
/*                                 << ÉCÉìÉNÉãÅ[Éh >>                                            */
/*===============================================================================================*/
#include "KsEngine/math/KsVector.h"
#include "KsEngine/math/KsMatrix.h"
#include "KsEngine/math/KsQuaternion.h"
#include "KsEngine/math/KsTransform.h"
#include "KsEngine/math/KsPlane.h"

/*===============================================================================================*/
/*                                     << íËã` >>                                                */
/*===============================================================================================*/

/*************************************************************************************************/
/**
 *
 */
/*************************************************************************************************/
template <typename T> T KsMax( T a, T b )  { return (((a) > (b)) ? (a) : (b)); }

/*************************************************************************************************/
/**
 *
 */
/*************************************************************************************************/
template <typename T> T KsMin( T a, T b )  { return (((a) < (b)) ? (a) : (b)); } 

/*************************************************************************************************/
/**
 *
 */
/*************************************************************************************************/
inline KsBool KsEquals( KsReal a, KsReal b )
{
	return (a + ksTOLERANCE > b) && (a - ksTOLERANCE < b);
}

/*************************************************************************************************/
/**
 * log ÇópÇ¢ÇƒÅAÇ†ÇÈílÇ…ìûíBÇ∑ÇÈÇΩÇﬂÇÃåWêîÇãÅÇﬂÇÈ
 * @param	_a		åWêî 
 * @param	_b		ìûíBì_
 * @param	_d		ãÊä‘
 */
/*************************************************************************************************/
#define  KsGetLogParam( _a, _b, _d )   (KsReal)_a = (KsReal)(_b)/(KsReal)KsLogE(_d)

/*************************************************************************************************/
/**
 * log10 ÇópÇ¢ÇƒÅAÇ†ÇÈílÇ…ìûíBÇ∑ÇÈÇΩÇﬂÇÃåWêîÇãÅÇﬂÇÈ
 * @param	_a		åWêî 
 * @param	_b		ìûíBì_
 * @param	_d		ãÊä‘
 */
/*************************************************************************************************/
#define  KsGetLog10Param( _a, _b, _d )   (KsReal)_a = (KsReal)(_b)/(KsReal)KsLog10(_d)

/*************************************************************************************************/
/**
 * ìÒéüä÷êî ÇópÇ¢ÇƒÅAÇ†ÇÈílÇ…ìûíBÇ∑ÇÈÇΩÇﬂÇÃåWêîÇãÅÇﬂÇÈ
 * @param	_a		åWêî 
 * @param	_x		ìûíBì_
 * @param	_d		ãÊä‘
 */
/*************************************************************************************************/
#define  KsGetQuadratic( _a, _x, _d ) ( (KsReal)_a = ( (KsReal)(_d)/(KsReal)((_x)*(_x)) ) )

/*************************************************************************************************/
/**
 * 1éüä÷êî ÇópÇ¢ÇƒÅAÇ†ÇÈílÇ…ìûíBÇ∑ÇÈÇΩÇﬂÇÃåWêîÇãÅÇﬂÇÈ _a:åWêî _x:ãÊä‘ _d:ìûíBì_
 * @param	_a		åWêî 
 * @param	_x		ìûíBì_
 * @param	_d		ãÊä‘
 */
/*************************************************************************************************/
#define  KsGetLinear(_a,_x,_d ) ( (KsReal)_a = ( (KsReal)(_d)/(KsReal)( _x ) ) )

/*************************************************************************************************/
/**
 * 2éüä÷êîÇ≈ÇÃåvéZåãâ 
 * @param	_a		åWêî
 * @param	_x		X
 */
/*************************************************************************************************/
#define  KsPlusLinearFunc(_a,_x)     KsFabs(_a)*(_x)

/*************************************************************************************************/
/**
 * 2éüä÷êîÇ≈ÇÃåvéZåãâ 
 * @param	_a		åWêî
 * @param	_x		X
 */
/*************************************************************************************************/
#define  KsMinusLinearFunc(_a,_x,_b) (-KsFabs(_a))*(_x)+_b

/*************************************************************************************************/
/**
 * 2éüä÷êîÇ≈ÇÃåvéZåãâ 
 * @param	_a		åWêî
 * @param	_x		X
 */
/*************************************************************************************************/
#define  KsPlusQuadraticFunc(_a,_x)  KsFabs(_a)*(_x*_x)

/*************************************************************************************************/
/**
 * 2éüä÷êîÇ≈ÇÃåvéZåãâ 
 * @param	_a		åWêî
 * @param	_x		X
 */
/*************************************************************************************************/
#define  KsMinusQuadraticFunc(_a,_x,_d,_b)  (-KsFabs(_a))*(_x -_d)*(_x -_d)+_b

/*************************************************************************************************/
/**
 * ìôç∑ãâêîÇÃòaÇãÅÇﬂÇ‹Ç∑
 * @param	a		èâçÄ
 * @param	d		åˆç∑
 * @param	n		çÄêî
 */
/*************************************************************************************************/
#define  KsSumArithmeticalSeries( _a, _d, _n ) ( (_n)*( 2*(_a) + (_n-1)*(_d) ) /2.0f )

/*************************************************************************************************/
/**
 * ìôî‰ãâêîÇÃòaÇãÅÇﬂÇ‹Ç∑
 * @param	a		èâçÄ
 * @param	d		åˆî‰
 * @param	n		çÄêî
 */
/*************************************************************************************************/
#define  KsSumGeometricalSeries(a,r,n)  ((KsReal)a)*(1.0f-(KsReal)KsPow(r,n) )/(KsReal)(1.0f-((KsReal)r))  

/*************************************************************************************************/
/**
 * ë»â~â~é¸åˆéÆ ãﬂéó
 * @param	a		ãﬂñT
 * @param	b		âìñT
 */
/*************************************************************************************************/
#define  KsDaenEnsyuKousiki(a,b) (ksPI*KsSqrt(2*(a*a + b*a)) - (a-b)*(a-b)/2.2f)

/*************************************************************************************************/
/**
 * É∞N
 */
/*************************************************************************************************/
#define  KsSigmaN( _a )  (1.0f/2.0f)*((KsInt32)_a)*((KsInt32)_a+1)

/*************************************************************************************************/
/**
 * É∞N2èÊ
 */
/*************************************************************************************************/
#define  KsSigmaNSquare( _a )  (1.0f/6.0f)*((KsInt32)_a)*((KsInt32)_a+1)*(2*(KsInt32)_a + 1 )

/*************************************************************************************************/
/**
 * É∞N3èÊ
 */
/*************************************************************************************************/
#define  KsSigmaNTriple( _a )  KsSigmaN( _a ) * KsSigmaN( _a )



#endif	/* __STMATH_H__ */






