/************************************************************************************************/
/** 
 * @file		KsFileThread.cpp
 * @brief		ファイルスレッド
 * @author		Tsukasa Kato
 * @date		2011/07/02
 * @since		2011/07/02
 * @version		1.0.0
 */
/************************************************************************************************/
#ifndef __KSFILETHREAD_H__
#define __KSFILETHREAD_H__

/*==============================================================================================*/
/*                                 << インクルード >>                                            */
/*==============================================================================================*/

/*==============================================================================================*/
/*                                     << 宣言 >>                                               */
/*==============================================================================================*/
class KsFileSystem;

/*==============================================================================================*/
/*                                     << 定義 >>                                               */
/*==============================================================================================*/


/************************************************************************************************/
/**
 * ファイルスレッド
 * @class	KsFileThread
 * @author  Tsukasa Kato
 * @since   2003/03/22
 * @version ----/--/--
 */
/************************************************************************************************/
class ksENGINE_API KsFileThread : public KsThread
{
	public:
		/**
		 * コンストラクタ
		 */
										KsFileThread( KsFileSystem* pFileSystem, ksTHREAD_PRIORITY_TYPE priority, KsUInt32 prosessor );

		/**
		 * デストラクタ
		 */
										~KsFileThread();

		/**
		 * スレッドのメイン関数
		 * @return	実行終了結果
		 */
		virtual KsUInt32				threadMain();

		/**
		 * ファイルスレッドを実行する
		 */
		KsBool							run();

		/**
		 * ウエイトイベントをセットする
		 */
		void							setWaitEvent();

		/**
		 * 同期イベントをセットする
		 */
		void							setSyncEvent();

		/**
		 * ウエイトイベントをリセットする
		 */
		void							resetWaitEvent();

		/**
		 * 同期イベントをリセットする
		 */
		void							resetSyncEvent();

	private:
		KsFileSystem*					m_pFileSystem;			/**< ファイルシステム			*/
		ksTHREAD_PRIORITY_TYPE			m_priority;				/**< プライオリティ			*/
		KsUInt32						m_prosessor;			/**< プロセッサ番号			*/
		KsBool							m_bThreadLoop;			/**< スレッドループ			*/
		KsHandle						m_waitEvent;			/**< ウエイトイベント			*/
		KsHandle						m_syncEvent;			/**< 同期イベント			*/
};


#endif	/* __KSFILETHREAD_H__ */


