/************************************************************************************************/
/** 
 * @file		KsScene.h
 * @brief		シーン
 * @author		Tsukasa Kato
 * @date		2004/10/17
 * @since		2004/10/17
 * @version		0.1
 */
/************************************************************************************************/
#ifndef __KSSCENE_H__
#define __KSSCENE_H__

/*==============================================================================================*/
/*                                 << インクルード >>                                           */
/*==============================================================================================*/
#include "KsTask.h"

/*==============================================================================================*/
/*                                     << 宣言 >>                                               */
/*==============================================================================================*/
class KsSceneManager;

/*==============================================================================================*/
/*                                     << 定義 >>                                               */
/*==============================================================================================*/

/************************************************************************************************/
/**
 * @class		KsScene
 * @brief		タイトル
 * @date		2004/10/17
 * @since		2004/10/17
 * @version		0.10
 * @note		なし
 */
/************************************************************************************************/
class KsScene : public KsTask
{
	public:
		/**
		 * コンストラクタ
		 */
											KsScene();

		/**
		 * コンストラクタ
		 * @param		pSceneManager		シーンマネージャ
		 */
											KsScene( KsSceneManager* pSceneManager );

		/**
		 * デストラクタ
		 */
		virtual							~KsScene();
	
	protected:
		/**
		 * 初期化処理(マネージャに登録されたときに登録)
		 * @param		pParam				パラメータ
		 */
		virtual void*						initialize( void* pParam );

		/**
		 * タスクの実行
		 * @param		pParam				パラメータ
		 */
		virtual void*						execute( void* pParam );

		/**
		 * 描画処理
		 * @param		pParam				パラメータ
		 */
		virtual void*						render( void* pParam );

		/**
		 * 後処理関数でメモリーから削除されるときに呼ばれる
		 * @param		pParam				パラメータ
		 */
		virtual void*						terminate( void* pParam );
		
	protected:
		KsSceneManager*						m_pSceneManager;	/**< 親となるシーンマネージャのポインタ	*/
};

#endif /* __KSSCENE_H__ */

