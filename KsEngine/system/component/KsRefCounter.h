/*************************************************************************************************/
/** 
 * @file	KsRefCounter.h
 * @brief	参照カウンタ
 * @author	Tsukasa Kato
 * @since   2005/06/27
 * @since   2005/06/27
 */
/*************************************************************************************************/
#ifndef __KSREFCOUNTER_H__
#define __KSREFCOUNTER_H__

/*===============================================================================================*/
/*								<< インクルードファイル >>										 */
/*===============================================================================================*/

/*===============================================================================================*/
/*										<< 定義 >>												 */
/*===============================================================================================*/


/*************************************************************************************************/
/**
 * @class	KsRefCounter
 * @brief	参照カウンタ
 * @author	Tsukasa Kato
 * @since   2005/06/27
 * @since   2005/06/27
 * @note	継承して使用します。
 */
/*************************************************************************************************/
class ksENGINE_API KsRefCounter
{
	public:
		/**
		 * コンストラクタ
		 */
									KsRefCounter() : m_refCount( 1 ) {}
		/**
		 * デストラクタ
		 */
		virtual						~KsRefCounter() { m_refCount = 0; }
	
		/**
		 * 参照カウント
		 */
		KsInt32						getRefCount() const { return m_refCount; }

		/**
		 * 参照カウントをあげる
		 */
		void						inc() { ++m_refCount; }

		/**
		 * 参照カウントを減らす
		 * @note					参照カウントが0になったら削除される
		 */
		void						dec() { if( !(--m_refCount) ) { delete this; } }

	private:
		KsInt32						m_refCount;		/**< 参照カウント	*/
};


#endif	/* __KSREFCOUNTER_H__ */

