/************************************************************************************************/
/** 
 * @file		KsMutex.cpp
 * @brief		
 * @author		Tsukasa Kato
 * @date		2004/08/17
 * @since		----/--/--
 * @version		1.0
 */
/************************************************************************************************/

/*==============================================================================================*/
/*                                 << インクルード >>                                            */
/*==============================================================================================*/
#include "KsMutex.h"

/*==============================================================================================*/
/*                                     << 定義 >>                                               */
/*==============================================================================================*/

/*==============================================================================================*/
/*                                     << 宣言 >>                                               */
/*==============================================================================================*/

/************************************************************************************************/
/**
 * コンストラクタ
 */
/************************************************************************************************/
KsMutex::KsMutex()
{
	m_hMutex = NULL;
}

/************************************************************************************************/
/**
 * デストラクタ
 */
/************************************************************************************************/
KsMutex::~KsMutex()
{
	destroy();
}

/************************************************************************************************/
/**
 * オープン
 * @param		mutexName		名前
 * @retval		ksTRUE			他に同名のものが存在する
 * @retval		ksFALSE			他に同名のものは存在しない
 */
/************************************************************************************************/
KsBool KsMutex::create( std::string mutexName )
{
	// 同一プロセスのスレッド間でならCriticalSectionを用いるべき！
	destroy();

	// この名前で登録
	m_hMutex = ::CreateMutex( NULL, true, mutexName.c_str() );
	
	if( GetLastError() == ERROR_ALREADY_EXISTS ){
		return ksFALSE;
	}

	return ksTRUE;
}

/************************************************************************************************/
/**
 * 所有権が獲得できるまで待つ
 */
/************************************************************************************************/
void KsMutex::wait()
{
	// 所有権が得られるまで待つ
	::WaitForSingleObject( m_hMutex, INFINITE );
}

/************************************************************************************************/
/**
 * Mutexを解放する
 */
/************************************************************************************************/
void KsMutex::destroy()
{
	if( m_hMutex != NULL )
	{
		::ReleaseMutex( m_hMutex );	//	所有権の解放
		::CloseHandle( m_hMutex );	//	生成したMutexの破壊
		m_hMutex = NULL;
	}
}
