/************************************************************************************************/
/** 
 * @file		KsAnimation.cpp
 * @brief		ボーン
 * @author		Tsukasa Kato
 * @date		----/--/--
 * @since		----/--/--
 * @version		1.0
 */
/************************************************************************************************/

/*==============================================================================================*/
/*                                 << インクルード >>                                           */
/*==============================================================================================*/
#include "KsAnimation2D.h"


/*==============================================================================================*/
/*                                     << 定義 >>                                               */
/*==============================================================================================*/

/*==============================================================================================*/
/*                                     << 宣言 >>                                               */
/*==============================================================================================*/

#if 0
/************************************************************************************************/
/**
 * @class		KsAnimation
 * @brief		アニメーション
 * @author		Tsukasa Kato
 * @date		----/--/--
 * @since		----/--/--
 */
/************************************************************************************************/
void KsAnimation::anim( KsReal time, KsMesh* pMesh )
{
	if( m_endTime <= time ){
		time -= m_endTime;
	}

	for( KsInt32 i=0; i<getNumTrack(); i++ )
	{
		KsReal			t;
		KsAnimKeyFrame	key1;
		KsAnimKeyFrame	key2;

		m_pvTracks[ i ]->getKeyFrame( time, &t, &key1, &key2 );

		KsVector3d	pos = key1.m_pos + ( ( key2.m_pos - key1.m_pos ) * t );

		pMesh->m_pHierarchy->m_pJointList[ i ]->m_translate = pos;
		KsQuaternion	quat;
		KsQuaternionSlerp( &quat, &key1.m_rotation, &key2.m_rotation, t );
		pMesh->m_pHierarchy->m_pJointList[ i ]->m_rotate = quat;
	}
}


#endif

