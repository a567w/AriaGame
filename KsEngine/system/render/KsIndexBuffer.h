/************************************************************************************************/
/** 
 * @file		KsVertexBuffer.h
 * @brief		インデックスバッファ
 * @author		Tsukasa Kato
 * @date		----/--/--
 * @since		----/--/--
 * @version		1.0.0
 */
/************************************************************************************************/
#ifndef __KSINDEXBUFFER_H__
#define __KSINDEXBUFFER_H__

/*==============================================================================================*/
/*                                 << インクルード >>                                            */
/*==============================================================================================*/
#include "KsType.h"

/*==============================================================================================*/
/*                                     << 定義 >>                                               */
/*==============================================================================================*/

/*==============================================================================================*/
/*                                     << 宣言 >>                                               */
/*==============================================================================================*/


/************************************************************************************************/
/**
 * @class		KsIndexBuffer
 * @brief		インデックスバッファ
 * @author		Tsukasa Kato
 * @date		----/--/--
 * @since		----/--/--
 */
/************************************************************************************************/
class KsIndexBuffer
{
	public:
		/**
		 * インデックスバッファを生成する
		 * @param	pDevice			デバイス
		 * @param	numIndex		インデックスの数
		 * @param	flags			フラグ
		 */
									KsIndexBuffer(){}

		/**
		 * デストラクタ
		 */
		virtual					~KsIndexBuffer(){}

		/**
		 * インデックスバッファをロックする
		 * @param	startIndex		ロックする先頭のインデックス
		 * @param	numIndex		ロックするインデックスの数
		 * @param	flags			ロックフラグ
		 * @return					ロックしたバッファの先頭ポインタ
		 */
		virtual void*				lock( KsUInt32 startIndex, KsUInt32 numIndex, KsUInt32 flags ) = 0;

		/**
		 * インデックスバッファのロックを解除する
		 */
		virtual void				unlock() = 0;

		/**
		 * インデックスバッファからの読み込み
		 * @param	pData			データ読み込み用のポインタ
		 * @param	startIndex		ロックする先頭のインデックス
		 * @param	numIndex		ロックするインデックスの数
		 */
		virtual void				read( void* pData, KsUInt32 startIndex, KsUInt32 numIndex ) = 0;

		/**
		 * インデックスバッファへの書き込み
		 * @param	pData			書き込みデータのポインタ
		 * @param	startIndex		ロックする先頭のインデックス
		 * @param	numIndex		ロックするインデックスの数
		 */
		virtual void				write( void* pData, KsUInt32 startIndex, KsUInt32 numIndex ) = 0;

	protected:
		KsUInt32					m_numIndex;		/**< 頂点数		*/
};

#endif		/* __KSINDEXBUFFER_H__ */



