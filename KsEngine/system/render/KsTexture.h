/************************************************************************************************/
/** 
 * @file		KsTexture.h
 * @brief		テクスチャ
 * @author		Tsukasa Kato
 * @date		----/--/--
 * @since		----/--/--
 * @version		1.0
 */
/************************************************************************************************/
#ifndef __KSTEXTURE_H__
#define __KSTEXTURE_H__

/*==============================================================================================*/
/*                                 << インクルード >>                                            */
/*==============================================================================================*/
#include "KsType.h"
#include "KsImage.h"
#include "KsRefCounter.h"

/*==============================================================================================*/
/*                                     << 定義 >>                                               */
/*==============================================================================================*/

/*==============================================================================================*/
/*                                     << 宣言 >>                                               */
/*==============================================================================================*/


/************************************************************************************************/
/**
 * @class		KsTexture
 * @brief		テクスチャ
 * @author		Tsukasa Kato
 * @date		----/--/--
 * @since		----/--/--
 * @note		参照カウンタつき
 */
/************************************************************************************************/
class KsTexture : public KsRefCounter
{
	protected:
		KsUInt32							m_id;				/**< テクスチャID					*/
		KsChar								m_name[ 128 ];		/**< テクスチャ名					*/
		KsInt32								m_numMipmap;		/**< ミップマップ数					*/
		KsUInt16							m_width;			/**< 幅								*/
		KsUInt16							m_height;			/**< 高さ							*/
		ksPixelFormat						m_format;			/**< フォーマット					*/
		KsImage*							m_pImage;			/**< イメージデータ					*/
		//KsTextureManager*					m_pTextureManager;	/**< テクスチャマネージャのポインタ	*/
	public:
		/**
		 * コンストラクタ
		 */
											KsTexture();

		/**
		 * デストラクタ
		 */
		virtual							~KsTexture();

		/**
		 * ロックする
		 * @return							データのポインタ
		 */
		virtual void*						lock() = 0;

		/**
		 * ロックを解除する
		 */
		virtual void						unlock() = 0;

		/* テスト用 */
		virtual KsBool						load( const KsChar* pFileName ) = 0;

		/**
		 * テクスチャ生成
		 */
		//virtual void						createTexture() = 0;

		/**
		 *
		 */
		virtual void						destroy();

		/**
		 * テクスチャIDを取得する
		 * @return							テクスチャID
		 */
		KsUInt32							getID() { return m_id; }

		/**
		 * ミップマップを持っているかどうか?
		 * @retval		ksTRUE				持っている
		 * @retval		ksFALSE				持っていない
		 */
		KsBool								hasMipmap() { return ( m_numMipmap > 0 ); }
};

#endif		/* __KSTEXTURE_H__ */
