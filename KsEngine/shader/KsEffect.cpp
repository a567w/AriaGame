/************************************************************************************************/
/** 
 * @file		KsEffect.cpp
 * @brief		エフェクトファイル
 * @author		Tsukasa Kato
 * @date		----/--/--
 * @since		----/--/--
 * @version		1.0.0
 */
/************************************************************************************************/

/*==============================================================================================*/
/*                                 << インクルード >>                                           */
/*==============================================================================================*/
#include "KsEngine/KsEnginePreCompile.h"
#include "KsEffect.h"

/*==============================================================================================*/
/*                                     << 定義 >>                                               */
/*==============================================================================================*/

/*==============================================================================================*/
/*                                     << 宣言 >>                                               */
/*==============================================================================================*/

/************************************************************************************************/
/*
 * コンストラクタ
 */
/************************************************************************************************/
KsEffect::KsEffect()
{
}

/************************************************************************************************/
/*
 * デストラクタ
 */
/************************************************************************************************/
KsEffect::~KsEffect()
{
	ksDELETEARRAYTEMPLATE( m_pVertexShaders );
	ksDELETEARRAYTEMPLATE( m_pPixelShaders  );
	ksDELETEARRAYTEMPLATE( m_pGeometryShaders );
	ksDELETEARRAYTEMPLATE( m_pComputeShaders  );

	ksDELETEARRAYTEMPLATE( m_pInputLayouts  );
	ksDELETEARRAYTEMPLATE( m_pVertexBuffers );
	ksDELETEARRAYTEMPLATE( m_pIndexBuffers  );
}

/************************************************************************************************/
/*
 *
 */
/************************************************************************************************/
void KsEffect::setShader( KsRenderContext* pRenderContext, void* pParameter )
{
}

/************************************************************************************************/
/*
 *
 */
/************************************************************************************************/
KsVertexShader* KsEffect::getVertexShader( KsUInt32 index )
{
	if( 0 == getVertexShaderCount() )
	{
		return NULL;
	}

	return m_pVertexShaders[ index ];
}

/************************************************************************************************/
/*
 *
 */
/************************************************************************************************/
KsPixelShader*  KsEffect::getPixelShader( KsUInt32 index )
{
	if( 0 == getPixelShaderCount() )
	{
		return NULL;
	}

	return m_pPixelShaders[ index ];
}

/************************************************************************************************/
/*
 *
 */
/************************************************************************************************/
KsGeometryShader*  KsEffect::getGeometryShader( KsUInt32 index )
{
	if( 0 == getGeometryShaderCount() )
	{
		return NULL;
	}

	return m_pGeometryShaders[ index ];
}

/************************************************************************************************/
/*
 *
 */
/************************************************************************************************/
KsComputeShader*  KsEffect::getComputeShader( KsUInt32 index )
{
	if( 0 == getComputeShaderCount() )
	{
		return NULL;
	}

	return m_pComputeShaders[ index ];
}

/************************************************************************************************/
/*
 *
 */
/************************************************************************************************/
KsInputLayout* KsEffect::getInputLayout( KsUInt32 index )
{
	if( 0 == getInputLayoutCount() )
	{
		return NULL;
	}

	return m_pInputLayouts[ index ];
}

/************************************************************************************************/
/*
 *
 */
/************************************************************************************************/
KsVertexBuffer* KsEffect::getVertexBuffer( KsUInt32 index )
{
	if( 0 == getVertexBufferCount() )
	{
		return NULL;
	}

	return m_pVertexBuffers[ index ];
}

/************************************************************************************************/
/*
 *
 */
/************************************************************************************************/
KsIndexBuffer* KsEffect::getIndexBuffer( KsUInt32 index )
{
	if( 0 == getIndexBufferCount() )
	{
		return NULL;
	}

	return m_pIndexBuffers[ index ];
}


/************************************************************************************************/
/*
 *
 */
/************************************************************************************************/
void KsEffect::addVertexShader( KsVertexShader* pShader )
{
	m_pVertexShaders.push_back( pShader );
}

/************************************************************************************************/
/*
 *
 */
/************************************************************************************************/
void KsEffect::addPixelShader( KsPixelShader* pShader )
{
	m_pPixelShaders.push_back( pShader );
}

/************************************************************************************************/
/*
 *
 */
/************************************************************************************************/
void KsEffect::addGeometryShader( KsGeometryShader* pShader )
{
	m_pGeometryShaders.push_back( pShader );
}

/************************************************************************************************/
/*
 *
 */
/************************************************************************************************/
void KsEffect::addComputeShader( KsComputeShader* pShader )
{
	m_pComputeShaders.push_back( pShader );
}

/************************************************************************************************/
/*
 *
 */
/************************************************************************************************/
void KsEffect::addInputLayout( KsInputLayout* pLayout )
{
	m_pInputLayouts.push_back( pLayout );
}

/************************************************************************************************/
/*
 *
 */
/************************************************************************************************/
void KsEffect::addVertexBuffer( KsVertexBuffer* pVertexBuffer )
{
	m_pVertexBuffers.push_back( pVertexBuffer );
}

/************************************************************************************************/
/*
 *
 */
/************************************************************************************************/
void KsEffect::addIndexBuffer( KsIndexBuffer* pIndexBuffer )
{
	m_pIndexBuffers.push_back( pIndexBuffer );
}

/************************************************************************************************/
/*
 *
 */
/************************************************************************************************/
KsUInt32 KsEffect::getVertexShaderCount() const
{
	return m_pVertexShaders.size();
}

/************************************************************************************************/
/*
 *
 */
/************************************************************************************************/
KsUInt32 KsEffect::getPixelShaderCount() const
{
	return  m_pPixelShaders.size();
}

/************************************************************************************************/
/*
 *
 */
/************************************************************************************************/
KsUInt32 KsEffect::getGeometryShaderCount() const
{
	return m_pGeometryShaders.size();
}

/************************************************************************************************/
/*
 *
 */
/************************************************************************************************/
KsUInt32 KsEffect::getComputeShaderCount() const
{
	return  m_pComputeShaders.size();
}


/************************************************************************************************/
/*
 *
 */
/************************************************************************************************/
KsUInt32 KsEffect::getInputLayoutCount() const
{
	return  m_pInputLayouts.size();
}

/************************************************************************************************/
/*
 *
 */
/************************************************************************************************/
KsUInt32 KsEffect::getVertexBufferCount() const
{
	return m_pVertexBuffers.size();
}

/************************************************************************************************/
/*
 *
 */
/************************************************************************************************/
KsUInt32 KsEffect::getIndexBufferCount() const
{
	return  m_pIndexBuffers.size();
}

