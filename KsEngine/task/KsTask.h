/************************************************************************************************/
/** 
 * @file		KsUpdate.h
 * @brief		更新処理
 * @author		Tsukasa Kato
 * @date		2011/10/17
 * @since		2011/10/17
 * @version		1.0.0
 */
/************************************************************************************************/
#ifndef __KSTASK_H__
#define __KSTASK_H__

/*==============================================================================================*/
/*                                 << インクルード >>                                           */
/*==============================================================================================*/

/*==============================================================================================*/
/*                                     << 宣言 >>                                               */
/*==============================================================================================*/

/*==============================================================================================*/
/*                                     << 定義 >>                                               */
/*==============================================================================================*/

/*==============================================================================================*/
/*                                     << 宣言 >>                                               */
/*==============================================================================================*/


/************************************************************************************************/
/**
 * 更新処理タスク
 * @class		KsTask
 * @date		2011/10/17
 * @since		2011/10/17
 * @version		1.0.0
 */
/************************************************************************************************/
class ksENGINE_API KsTask : public KsUpdate, public KsDraw
{
		friend class KsTaskManager;
	
	public:
		/**
		 * コンストラクタ
		 * @brief	0で初期化される
		 */
											KsTask();

		/**
		 * コンストラクタ
		 * @param	order					描画オーダー
		 */
											KsTask( KsUInt32 updateOrder, KsUInt32 drawOrder );

		/**
		 * デストラクタ
		 */
		virtual								~KsTask();

	protected:
		/**
		 * 初期化処理(マネージャに登録されたときに登録)
		 * @param		pParam				パラメータ
		 */
		virtual void*						initialize( void* pParam );

		/**
		 * 後処理関数でメモリーから削除されるときに呼ばれる
		 * @param		pParam				パラメータ
		 */
		virtual void*						terminate( void* pParam );

		/**
		 * 初期化処理(マネージャに登録されたときに登録)
		 * @param		pParam				パラメータ
		 */
		virtual void*						initializeGraphics( void* pParam );

		/**
		 * 後処理関数でメモリーから削除されるときに呼ばれる
		 * @param		pParam				パラメータ
		 */
		virtual void*						terminateGraphics( void* pParam );
};


#endif /* __KSTASK_H__ */

