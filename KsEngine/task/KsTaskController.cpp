/************************************************************************************************/
/** 
 * @file		KsTaskManager.cpp
 * @brief		基本タスクマネージャ
 * @author		Tsukasa Kato
 * @date		2004/10/17
 * @since		2004/10/17
 * @version		0.1
 */
/************************************************************************************************/

/*==============================================================================================*/
/*                                 << インクルード >>                                            */
/*==============================================================================================*/
#include "KsEngine/KsEnginePreCompile.h"

/*==============================================================================================*/
/*                                     << 定義 >>                                               */
/*==============================================================================================*/

/************************************************************************************************/
/*
 * コンストラクタ
 * @param		numUpdateList		更新リスト数
 * @param		numDrawList			描画リスト数
 */
/************************************************************************************************/
KsTaskManager::KsTaskManager( KsUInt32 numUpdateList, KsUInt32 numDrawList )
	: m_numUpdateList( numUpdateList )
	, m_numDrawList( numDrawList )
{
	m_pUpdates = ksNew KsUpdateList[ numUpdateList ];
	m_pDraws   = ksNew KsDrawList[ numDrawList ];
}

/************************************************************************************************/
/*
 * デストラクタ
 */
/************************************************************************************************/
KsTaskManager::~KsTaskManager()
{
	ksDELETEARRAY( m_pUpdates );
	ksDELETEARRAY( m_pDraws );
}

/************************************************************************************************/
/*
 * 
 */
/************************************************************************************************/
void KsTaskManager::addTask( KsTask* pTask )
{
	addUpdate( pTask );
	addDraw( pTask );
}

/************************************************************************************************/
/*
 * 
 */
/************************************************************************************************/
void KsTaskManager::addUpdate( KsUpdate* pUpdate )
{
	const KsUInt32 order = pUpdate->getUpdateOrder();

	m_pUpdates[ order ].add( pUpdate );
}

/************************************************************************************************/
/*
 * 
 */
/************************************************************************************************/
void KsTaskManager::addDraw( KsDraw* pDraw )
{
	const KsUInt32 order = pDraw->getDrawOrder();

	m_pDraws[ order ].add( pDraw );
}

/************************************************************************************************/
/*
 * 
 */
/************************************************************************************************/
void KsTaskManager::removeTask( KsTask* pTask )
{
	removeUpdate( pTask );
	removeDraw( pTask );
}

/************************************************************************************************/
/*
 * 
 */
/************************************************************************************************/
void KsTaskManager::removeUpdate( KsUpdate* pUpdate )
{
	const KsUInt32 order = pUpdate->getUpdateOrder();

	m_pUpdates[ order ].remove( pUpdate );
}

/************************************************************************************************/
/*
 * 
 */
/************************************************************************************************/
void KsTaskManager::removeDraw( KsDraw* pDraw )
{
	const KsUInt32 order = pDraw->getDrawOrder();

	m_pDraws[ order ].remove( pDraw );
}

/************************************************************************************************/
/*
 * 
 */
/************************************************************************************************/
void KsTaskManager::destroyTask( KsTask* pTask )
{
}

/************************************************************************************************/
/*
 * 
 */
/************************************************************************************************/
void KsTaskManager::destroyUpdate( KsUpdate* pUpdate )
{
}

/************************************************************************************************/
/*
 * 
 */
/************************************************************************************************/
void KsTaskManager::destroyDraw( KsDraw* pDraw )
{
}


/************************************************************************************************/
/*
 * すべて削除
 */
/************************************************************************************************/
void KsTaskManager::destroyAll()
{
}

/************************************************************************************************/
/*
 * 更新処理
 */
/************************************************************************************************/
void KsTaskManager::execute( void* pParam )
{
	// 別スレッドで処理する
}

/************************************************************************************************/
/*
 * 描画する
 */
/************************************************************************************************/
void KsTaskManager::render( void* pParam )
{
	/* 描画処理 */
	begineRender();

	// 別スレッドで処理する


	endRender();
}

/************************************************************************************************/
/*
 * 指定オーダーだけストップさせるとかの機能がほしい
 */
/************************************************************************************************/
void KsTaskManager::run( void* pParam )
{
	/* 更新 */
	execute( pParam );

	/* 描画(カメラの描画はここだけ) */
	render( pParam );
}

/************************************************************************************************/
/*
 * 描画開始
 */
/************************************************************************************************/
void KsTaskManager::begineRender()
{
}

/************************************************************************************************/
/*
 * 描画終了
 */
/************************************************************************************************/
void KsTaskManager::endRender()
{
}

