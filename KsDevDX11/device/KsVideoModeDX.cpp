/************************************************************************************************/
/** 
 * @file		KsVideoModeDX.cpp
 * @brief		ビデをモードを取得する
 * @author		Tsukasa Kato
 * @date		2004/08/17
 * @since		----/--/--
 * @version		1.0
 */
/************************************************************************************************/

/*==============================================================================================*/
/*                                 << インクルード >>											 */
/*==============================================================================================*/
#include "KsVideoModeDX.h"
#include "KsAdapterDX.h"

/*==============================================================================================*/
/*									  << 宣言 >>												*/
/*==============================================================================================*/
KsInt32 KsVideoModeDX::m_modeCount = 0;

/************************************************************************************************/
/*
 * コンストラクタ
 */
/************************************************************************************************/
KsVideoModeDX::KsVideoModeDX()
{
	m_modeNumber = ++m_modeCount;
	KsZeroMemory( &m_displayMode, sizeof(D3DDISPLAYMODE) );
}

/************************************************************************************************/
/*
 * コンストラクタ
 */
/************************************************************************************************/
KsVideoModeDX::KsVideoModeDX( const KsVideoModeDX& refKsVideoMode )
{
	m_modeNumber  = ++m_modeCount;
	m_displayMode = refKsVideoMode.m_displayMode;
}

/************************************************************************************************/
/*
 * コンストラクタ
 */
/************************************************************************************************/
KsVideoModeDX::KsVideoModeDX( D3DDISPLAYMODE displayMode )
{
	m_modeNumber = ++m_modeCount;
	m_displayMode = displayMode;
}

/************************************************************************************************/
/*
 * カラー深度(何ビットカラーか)を取得する
 * @return									カラー深度
 */
/************************************************************************************************/
KsUInt32 KsVideoModeDX::getColorDepth() const
{
	KsUInt32	colorDepth = 16;
	
	if(		m_displayMode.Format == D3DFMT_X8R8G8B8
		||	m_displayMode.Format == D3DFMT_A8R8G8B8
		||	m_displayMode.Format == D3DFMT_R8G8B8
		)
	{
		colorDepth = 32;
	}

	return colorDepth;
}

/************************************************************************************************/
/*
 * ディスプレイのフォーマットを取得する
 * @return									ディスプレイのフォーマット
 */
/************************************************************************************************/
KsString KsVideoModeDX::getDisplayModeInfo()
{
	KsChar info[ 512 ];
	
	sprintf( info, "%d x %d : %d-bit color", getWidth(), getHeight(), getColorDepth() );

	return	KsString( info );
}




