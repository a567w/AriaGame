/************************************************************************************************/
/**
 * @file	KsDisplayDX.h
 * @brief	
 * @author	Tsukasa Kato
 * @date	2003/11/30
 * @version	1.0.0
 */
/************************************************************************************************/
#ifndef __KSDISPLAYLISTDX_H__
#define __KSDISPLAYLISTDX_H__

/*==============================================================================================*/
/*                                 << インクルード >>                                           */
/*==============================================================================================*/
#include "KsTypeD3D9.h"

/*==============================================================================================*/
/*                                     << 定義 >>                                               */
/*==============================================================================================*/

/*==============================================================================================*/
/*                                     << 宣言 >>                                               */
/*==============================================================================================*/
class KsAdapterDX;
class KsAdapterListDX;

/************************************************************************************************/
/**
 * 画面情報選択リストクラス
 * @class	KsDisplayListDX
 * @author  Tsukasa Kato
 * @since   2003/03/22
 * @version ----/--/--
 */
/************************************************************************************************/
class ksDEVDX11_API KsDisplayListDX
{
	public:
		typedef KsArray< KsDisplayDX* >	KsDisplayDXArray;

	public:
		/**
		 * コンストラクタ
 		 * @param		pAdapter		アダプタ
		 */
										KsDisplayListDX( KsAdapterListDX* pAdapterList );
		/**
		 * デストラクタ
		 */
		virtual						~KsDisplayListDX();

		/**
		 * 画面設定情報を取得する
		 * @param		index			配列の指定インデックス
		 * @return						画面設定情報
		 */
		const KsDisplayDX*				getItem( KsInt32 index ) { return m_vDisplays[ index ]; }

		/**
		 * 画面設定情報の数を取得する
		 * @return						画面設定情報の数
		 */
		KsUInt32						getCount() const { return m_vDisplays.size(); }

	protected:
		KsDisplayDXArray				m_vDisplays;	/**< 画面設定情報リスト		*/
};


#endif	/* __KSDISPLAYLISTDX_H__ */


